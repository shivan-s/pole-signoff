name: Lint

on:
  push:
  pull_request:
    branches: [main]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    environment: Staging
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
      SECRET: ${{ secrets.SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Clean Install
        run: npm ci
      - name: Format
        run: npm run format
  lint:
    name: Lint
    runs-on: ubuntu-latest
    environment: Staging
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
      SECRET: ${{ secrets.SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Clean Install
        run: npm ci
      - name: Lint
        run: npm run lint
  check:
    name: Check
    runs-on: ubuntu-latest
    environment: Staging
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
      SECRET: ${{ secrets.SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Clean Install
        run: npm ci
      - name: Check
        run: npm run check
